//******************************************************************************
//******************************************************************************
//
//  Error codes support
//
//  Description: Definition of error suport class.
//
//******************************************************************************
//******************************************************************************
#ifndef mmErrorH
#define mmErrorH

#include <mmGlobalDefs.h>

////////////////////////////////////////////////////////////////////////////////
/// Base class for error description.
////////////////////////////////////////////////////////////////////////////////
class mmError
{
	private:  // fields
		////////////////////////////////////////////////////////////////////////////////
		/// Error ID.
		////////////////////////////////////////////////////////////////////////////////
		mmInt m_iErrorID;
		////////////////////////////////////////////////////////////////////////////////
		/// Error ID.
		////////////////////////////////////////////////////////////////////////////////
		mmString m_sErrorText;
	public:   // methods
		////////////////////////////////////////////////////////////////////////////////
		/// Constructor requires error ID.
		///
		/// @param[in] p_iErrID – error identifier.
		////////////////////////////////////////////////////////////////////////////////
		mmError(mmInt p_iErrID);
		////////////////////////////////////////////////////////////////////////////////
		/// Constructor requires error text.
		///
		/// @param[in] p_sErrorText – error text.
		////////////////////////////////////////////////////////////////////////////////
		mmError(mmString const & p_sErrorText);

		////////////////////////////////////////////////////////////////////////////////
		/// Returns error code.
		///
		/// @return error code.
		////////////////////////////////////////////////////////////////////////////////
		mmInt GetErrorCode(void) const;

		////////////////////////////////////////////////////////////////////////////////
		/// Returns error string.
		////////////////////////////////////////////////////////////////////////////////
		mmString GetErrorString(void) const;
};

////////////////////////////////////////////////////////////////////////////////
/// Unknown error.
////////////////////////////////////////////////////////////////////////////////
#define mmeUnknownError																										20000
////////////////////////////////////////////////////////////////////////////////
/// Allocation error.
////////////////////////////////////////////////////////////////////////////////
#define mmeBadAlloc																												20001
////////////////////////////////////////////////////////////////////////////////
/// Input string for processing is too short.
////////////////////////////////////////////////////////////////////////////////
#define mmeInputStringIsTooSmall																					20002
////////////////////////////////////////////////////////////////////////////////
/// Log receiver object is already registered in log redirector.
////////////////////////////////////////////////////////////////////////////////
#define mmeLogReceiverObjectAlreadyRegistered															20003
////////////////////////////////////////////////////////////////////////////////
/// Log receiver object is not registered in log redirector.
////////////////////////////////////////////////////////////////////////////////
#define mmeLogReceiverObjectIsNotRegistered																20004
////////////////////////////////////////////////////////////////////////////////
/// Thread throws this error when creation of thread fails.
////////////////////////////////////////////////////////////////////////////////
#define mmeThreadCreateThreadError																				20008
////////////////////////////////////////////////////////////////////////////////
/// Thread can't register execution class because thread state is inapriopriate.
////////////////////////////////////////////////////////////////////////////////
#define mmeThreadCantRegisterExecutionClass																20009
////////////////////////////////////////////////////////////////////////////////
/// Thread resume error.
////////////////////////////////////////////////////////////////////////////////
#define mmeThreadResumeError																							20010
////////////////////////////////////////////////////////////////////////////////
/// Bad thread state for run.
////////////////////////////////////////////////////////////////////////////////
#define mmeThreadBadThreadState																						20011
////////////////////////////////////////////////////////////////////////////////
/// Unknown thread state occurs.
////////////////////////////////////////////////////////////////////////////////
#define mmeThreadUnknownThreadState																				20012
////////////////////////////////////////////////////////////////////////////////
/// Error occurs when ExclusiveLock is deleted and his state is still locked.
////////////////////////////////////////////////////////////////////////////////
#define mmeExclusiveLockLocked																						20100
////////////////////////////////////////////////////////////////////////////////
/// Error occurs when ExclusiveLock is Unlocked and his state is unlocked already.
////////////////////////////////////////////////////////////////////////////////
#define mmeExclusiveLockUnlocked																					20101
////////////////////////////////////////////////////////////////////////////////
/// Error occurs when ReadWriteLock is deleted and his state is still locked.
////////////////////////////////////////////////////////////////////////////////
#define mmeReadWriteLockBadEndLockCount																		20102
////////////////////////////////////////////////////////////////////////////////
/// Error occurs when ReadWriteLock is deleted and some object waits for write
/// access.
////////////////////////////////////////////////////////////////////////////////
#define mmeReadWriteLockWaitForWrite																			20103
////////////////////////////////////////////////////////////////////////////////
/// Error occurs when ReadWriteLock is unlocked from read and read state is
/// unlocked already.
////////////////////////////////////////////////////////////////////////////////
#define mmeReadWriteLockReadUnlocked																			20104
////////////////////////////////////////////////////////////////////////////////
/// Error occurs when ReadWriteLock is unlocked from write and write state is
/// unlocked already.
////////////////////////////////////////////////////////////////////////////////
#define mmeReadWriteLockWriteUnlocked																			20105

////////////////////////////////////////////////////////////////////////////////
/// Unknown error of file access/creation/delete occurs.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOUnknownError																							20200
////////////////////////////////////////////////////////////////////////////////
/// During file/directory creation/access of unexisting path/file occurs.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIONoSuchFileOrDirectory																		20201
////////////////////////////////////////////////////////////////////////////////
/// During file/directory access/creation/delete permission error occurs.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOPermissionToFileDenied 																	20202
////////////////////////////////////////////////////////////////////////////////
/// During temporary directory search error occurs.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIONoTemporaryDirectory																			20203
////////////////////////////////////////////////////////////////////////////////
/// During file opening error occurs.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOCantOpenFile																							20204
////////////////////////////////////////////////////////////////////////////////
/// During file operation, file is not opened, yet.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOFileIsNotOpened																					20205
////////////////////////////////////////////////////////////////////////////////
/// Error during file reading.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOCantReadFromFile																					20206
////////////////////////////////////////////////////////////////////////////////
/// Error during file writing.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOCantWriteToFile																					20207
////////////////////////////////////////////////////////////////////////////////
/// Error during file position setting.
////////////////////////////////////////////////////////////////////////////////
#define mmeFileIOBadFilePosition																					20208

////////////////////////////////////////////////////////////////////////////////
/// Error during operation on attribute. No such attribute.
////////////////////////////////////////////////////////////////////////////////
#define mmeXMLNoSuchAttribute																							20300
////////////////////////////////////////////////////////////////////////////////
/// Error during operation on node. No such node.
////////////////////////////////////////////////////////////////////////////////
#define mmeXMLNoSuchNode																									20301
////////////////////////////////////////////////////////////////////////////////
/// Error during parsing XML representation.
////////////////////////////////////////////////////////////////////////////////
#define mmeXMLParseError																									20302
////////////////////////////////////////////////////////////////////////////////
/// Error during using XML structure. Invalid structure.
////////////////////////////////////////////////////////////////////////////////
#define mmeXMLBadXMLStructure																							20303

////////////////////////////////////////////////////////////////////////////////
/// Error during reading pixel format - unknown format.
////////////////////////////////////////////////////////////////////////////////
#define mmeImageProcessingUnknownPixelType									20500
////////////////////////////////////////////////////////////////////////////////
/// Error during loading bitmap file, bad format.
////////////////////////////////////////////////////////////////////////////////
#define mmeImageProcessingBadBitmapPixelFormat								20501


////////////////////////////////////////////////////////////////////////////////
/// Client custom error
////////////////////////////////////////////////////////////////////////////////
#define mmeClientCustomError  30000
////////////////////////////////////////////////////////////////////////////////
/// Unknown Images calculation method
////////////////////////////////////////////////////////////////////////////////
#define mmeImagesStructureUnknownImagesCalculationMethod  30001
////////////////////////////////////////////////////////////////////////////////
/// Cannot add new data layer into empty structure
////////////////////////////////////////////////////////////////////////////////
#define mmeImageStructureCantAddNewDataLayerIntoEmptyStructure 30002
////////////////////////////////////////////////////////////////////////////////
/// User wanted to get data from non-existing channel
////////////////////////////////////////////////////////////////////////////////
#define mmeImageStructureNoChannel 30003
////////////////////////////////////////////////////////////////////////////////
/// There is no such datalayer
////////////////////////////////////////////////////////////////////////////////
#define mmeImageStructureNoSuchAdditionalDataLayer 30004
#define mmeHardwareBadRangeForParamsValue									20401

#define mmeHardwareCantCapture												20402
////////////////////////////////////////////////////////////////////////////////
/// Error during image reading from detector, index out of range.
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareImageOutOfRange											20403
////////////////////////////////////////////////////////////////////////////////
/// Error during initialisation of hardware component.
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareInitialisationError										20404
////////////////////////////////////////////////////////////////////////////////
/// Error during accessing hardware when it is not initialized.
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareNotInitialised											20405
////////////////////////////////////////////////////////////////////////////////
/// Error in detector name for initialization.
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareUnknownDetector											20406
////////////////////////////////////////////////////////////////////////////////
/// Error in projector name for initialization.
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareUnknownProjector											20407
////////////////////////////////////////////////////////////////////////////////
/// Error in manipulator name for initialization.
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareUnknownManipulator										20408
////////////////////////////////////////////////////////////////////////////////
/// Error during setting hardware parameters
////////////////////////////////////////////////////////////////////////////////
#define mmeHardwareCantSetParameter											20409


#endif
